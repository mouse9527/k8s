apiVersion: v1
kind: Namespace
metadata:
  name: storageos-etcd
  labels:
    app.kubernetes.io/name: storageos-etcd
    app.kubernetes.io/instance: storageos-etcd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: etcd-operator
  namespace: storageos-etcd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: etcd-operator
subjects:
  - kind: ServiceAccount
    name: default
    namespace: $NAMESPACE
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: etcd-operator
  namespace: storageos-etcd
rules:
  - apiGroups:
      - etcd.database.coreos.com
    resources:
      - etcdclusters
      - etcdbackups
      - etcdrestores
    verbs:
      - "*"
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - "*"
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
      - persistentvolumeclaims
      - events
    verbs:
      - "*"
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - "*"
  # The following permissions can be removed if not using S3 backup and TLS
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd-operator
  namespace: storageos-etcd
spec:
  replicas: 1
  selector:
    matchLabels:
      name: etcd-operator
  template:
    metadata:
      labels:
        name: etcd-operator
    spec:
      containers:
        - name: etcd-operator
          image: quay.io/coreos/etcd-operator:v0.9.4
          command:
            - etcd-operator
          env:
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
---
apiVersion: "etcd.database.coreos.com/v1beta2"
kind: "EtcdCluster"
metadata:
  name: "storageos-etcd"
  namespace: storageos-etcd
spec:
  size: 3
  version: "3.4.9"
  pod:
    etcdEnv:
      - name: ETCD_QUOTA_BACKEND_BYTES
        value: "2589934592"  # ~2 GB
      - name: ETCD_AUTO_COMPACTION_MODE
        value: "revision"
      - name: ETCD_AUTO_COMPACTION_RETENTION
        value: "100"
    #  For relevant clusters, you want guaranteed QoS "requests == limits"
    #    requests:
    #      cpu: 2
    #      memory: 4G
    #    limits:
    #      cpu: 2
    #      memory: 4G
    resources:
      requests:
        cpu: 200m
        memory: 300Mi
    securityContext:
      runAsNonRoot: true
      runAsUser: 9000
      fsGroup: 9000
    #  Tolerations example
    #    tolerations:
    #    - key: "role"
    #      operator: "Equal"
    #      value: "etcd"
    #      effect: "NoExecute"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: etcd_cluster
                    operator: In
                    values:
                      - storageos-etcd
              topologyKey: kubernetes.io/hostname