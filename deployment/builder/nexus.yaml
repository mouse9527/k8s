kind: PersistentVolume
apiVersion: v1
metadata:
  name: nexus-pv
  namespace: builder
  labels:
    pv: nexus-pv
spec:
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  nfs:
    server: nas.lan
    path: /volume1/k8s/nexus3
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: builder
  name: nexus-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  selector:
    matchLabels:
      pv: nexus-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus3
  namespace: builder
  labels:
    k8s-app: nexus3
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: nexus3
  template:
    metadata:
      labels:
        k8s-app: nexus3
      namespace: builder
      name: nexus3
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: nexus3
          image: registry.mouse.center:1443/sonatype/nexus3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
              name: web
              protocol: TCP
            - containerPort: 5000
              name: docker-proxy
              protocol: TCP
            - containerPort: 5001
              name: docker-push
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: 8081
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 6
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: nexus-data
              mountPath: /nexus-data
      volumes:
        - name: nexus-data
          persistentVolumeClaim:
            claimName: nexus-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nexus3
  namespace: builder
  labels:
    k8s-app: nexus3
spec:
  ports:
    - port: 80
      name: http
      targetPort: 8081
    - port: 81
      name: docker-repository
      targetPort: 5000
    - port: 82
      name: docker-push
      targetPort: 5001
  selector:
    k8s-app: nexus3
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nexus3-ingress
  namespace: builder
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: 10000m
spec:
  rules:
    - host: nexus.mouse.center
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nexus3
                port:
                  number: 80
    - host: docker-repository.mouse.center
      http:
        paths:
          - backend:
              service:
                name: nexus3
                port:
                  number: 81
            path: /
            pathType: Prefix
    - host: docker-push.mouse.center
      http:
        paths:
          - backend:
              service:
                name: nexus3
                port:
                  number: 82
            path: /
            pathType: Prefix
