apiVersion: v1
kind: ConfigMap
metadata:
  namespace: cd
  name: go-server-url
data:
  GO_EA_SERVER_URL: https://cd.mouse.center:1443/go
---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: cd
  name: gocd-agent-java-cfg
data:
  "autoregister.properties": |
    agent.auto.register.key=7cfc9db5-0925-4cab-a111-9ea52b9fdd83
    agent.auto.register.environments=k8s
    agent.auto.register.resources=java17,centos7

---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: cd
  name: gocd-agent-kubectl-cfg
data:
  "autoregister.properties": |
    agent.auto.register.key=7cfc9db5-0925-4cab-a111-9ea52b9fdd83
    agent.auto.register.environments=k8s
    agent.auto.register.resources=kubectl,centos7

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: cd
  name: gocd-agent-java17
  labels:
    app: gocd-agent-java17
spec:
  selector:
    matchLabels:
      app: gocd-agent-java17
  replicas: 2
  template:
    metadata:
      name: gocd-agent-java17
      namespace: cd
      labels:
        app: gocd-agent-java17
    spec:
      containers:
        - name: gocd-agent-java17
          image: registry.mouse.center:1443/gocd-agent-java17:v21.3.0
          env:
            - name: GO_EA_SERVER_URL
              value: https://cd.mouse.center:1443/go
          envFrom:
            - configMapRef:
                name: go-server-url
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: dockersock
            - mountPath: /root/.ssh
              name: ssh
              subPath: .ssh
            - mountPath: /root/.docker
              name: docker-config
            - mountPath: /godata/config/autoregister.properties
              name: autoregister-properties
              subPath: autoregister.properties
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: docker-config
          hostPath:
            path: /root/.docker
        - name: ssh
          nfs:
            server: nas
            path: /volume2/k8s/gocd/go
        - name: autoregister-properties
          configMap:
            name: gocd-agent-java-cfg
            defaultMode: 0666
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: gocd-agent-kubectl
  namespace: cd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gocd-agent-kubectl
  template:
    metadata:
      namespace: cd
      name: gocd-agent-kubectl
      labels:
        app: gocd-agent-kubectl
    spec:
      containers:
        - name: gocd-agent-kubectl
          image: registry.mouse.center:1443/gocd-agent-kubectl:v21.3.0
          envFrom:
            - configMapRef:
                name: go-server-url
          volumeMounts:
            - mountPath: /root/.kube/config
              name: gocd-agent-config
              subPath: config
            - mountPath: /godata/config/autoregister.properties
              name: autoregister-properties
              subPath: autoregister.properties
      volumes:
        - name: gocd-agent-config
          secret:
            secretName: gocd-agent-kubectl-secret
        - name: autoregister-properties
          configMap:
            name: gocd-agent-kubectl-cfg
            defaultMode: 0666

---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: cd
  name: gocd-agent-cleanup
data:
  API_URL: "https://cd.mouse.center:1443/go/api"
  TOKEN: "82615b2d8f5bf7c3b4babd5a073a7163165c21ee"

---
kind: CronJob
apiVersion: batch/v1
metadata:
  namespace: cd
  name: agent-cleanup
spec:
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: agent-cleanup
              image: registry.mouse.center:1443/gocd-agent-cleanup
              command:
                - bash
                - /cleanup.sh
              envFrom:
                - configMapRef:
                    name: gocd-agent-cleanup
  schedule: "*/1 * * * *"