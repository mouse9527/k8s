kind: Deployment
apiVersion: apps/v1
metadata:
  name: gitlab
  namespace: cd
  labels:
    app: gitlab
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: gitlab
  replicas: 1
  template:
    metadata:
      labels:
        app: gitlab
      namespace: cd
      name: gitlab
    spec:
      containers:
        - name: gitlab
          image: registry.mouse.center:1443/gitlab/gitlab-ce:15.11.13-ce.0
          ports:
            - containerPort: 1443
              name: web
              protocol: TCP
            - containerPort: 22
              name: ssh
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/gitlab
              name: gitlab-config
            - mountPath: /var/opt/gitlab
              name: gitlab-data
      volumes:
        - name: gitlab-config
          nfs:
            path: /volume2/k8s/gitlab/config
            server: nas
        - name: gitlab-data
          nfs:
            path: /volume2/k8s/gitlab/data
            server: nas
---
kind: CronJob
apiVersion: batch/v1
metadata:
  namespace: cd
  name: backup-gitlab
spec:
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          namespace: cd
          name: backup-gitlab
        spec:
          restartPolicy: OnFailure
          containers:
            - name: kubectl
              image: registry.mouse.center:1443/kubectl
              imagePullPolicy: Always
              command:
                - kubeexec
                - cd
                - gitlab
                - "gitlab-backup create"
              volumeMounts:
                - mountPath: /root/.kube/config
                  name: kube
                  subPath: config
          volumes:
            - name: kube
              secret:
                secretName: kubectl-secret
  schedule: "0 5 * * *"
---
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: cd
  labels:
    app: gitlab
spec:
  type: NodePort
  ports:
    - port: 443
      name: web
      targetPort: 1443
    - port: 22
      name: ssh
      targetPort: 22
      nodePort: 30022
  selector:
    app: gitlab
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gitlab-ingress
  namespace: cd
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  ingressClassName: "nginx"
  rules:
    - host: scm.mouse.center
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gitlab
                port:
                  name: web
