kind: Deployment
apiVersion: apps/v1
metadata:
  name: gitlab
  namespace: cd
  labels:
    app: gitlab
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: gitlab
  replicas: 1
  template:
    metadata:
      labels:
        app: gitlab
      namespace: cd
      name: gitlab
    spec:
      containers:
        - name: gitlab
          image: registry.mouse.center:1443/gitlab/gitlab-ce:14.0.7-ce.0
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 22
              name: ssh
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 15
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 15
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                external_url = 'https://scm.mouse.center:1443'
                gitlab_rails['gitlab_ssh_host'] = 'scm.mouse.center'
                gitlab_rails['time_zone'] = 'GMT'
                nginx['proxy_set_headers'] = {
                 "X-Forwarded-Proto" => "https",
                 "CUSTOM_HEADER" => "VALUE"
                }
          volumeMounts:
            - mountPath: /etc/gitlab
              name: gitlab-config
            - mountPath: /var/opt/gitlab
              name: gitlab-data
      volumes:
        - name: gitlab-config
          nfs:
            path: /volume2/k8s/gitlab/config
            server: nas
        - name: gitlab-data
          nfs:
            path: /volume2/k8s/gitlab/data
            server: nas
---
kind: CronJob
apiVersion: batch/v1
metadata:
  namespace: cd
  name: backup-gitlab
spec:
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: kubectl
              image: registry.mouse.center:1443/kubectl
              imagePullPolicy: Always
              command:
                - kubeexec
                - cd
                - gitlab
                - "gitlab-rake gitlab:backup:create"
              volumeMounts:
                - mountPath: /root/.kube/config
                  name: kube
                  subPath: config
          volumes:
            - name: kube
              secret:
                secretName: kubectl-secret
  schedule: "0 5 * * *"
---
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: cd
  labels:
    app: gitlab
spec:
  type: NodePort
  ports:
    - port: 80
      name: http
      targetPort: 80
    - port: 22
      name: ssh
      targetPort: 22
      nodePort: 30022
  selector:
    app: gitlab
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gitlab-ingress
  namespace: cd
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  rules:
    - host: scm.mouse.center
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gitlab
                port:
                  number: 80
