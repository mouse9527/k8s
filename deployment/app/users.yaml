---
kind: ConfigMap
apiVersion: v1
metadata:
  name: users-cfg
  namespace: app
data:
  application.yaml: |
    application:
      iam:
        jwt:
          private-key: /app/cofnig/privatekey.pem
          public-key: /app/cofnig/publickey.pem
    spring:
      data:
        mongodb:
          uri: mongodb://mongo-0.mongo.db:27017,mongo-1.mongo.db:27017,mongo-2.mongo.db:27017/users?replicaSet=rs0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: users
  namespace: app
  labels:
    k8s-app: users
spec:
  serviceName: users
  replicas: 1
  selector:
    matchLabels:
      k8s-app: users
  template:
    metadata:
      namespace: app
      name: users
      labels:
        k8s-app: users
    spec:
      containers:
        - name: users
          image: docker-repository.mouse.center:1443/users/users
          ports:
            - containerPort: 8080
              name: web
          env:
            - name: spring.config.location
              value: /application.yaml
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 6
          volumeMounts:
            - mountPath: /app/cofnig
              name: users-key
            - mountPath: /application.yaml
              name: applycation
              subPath: /application.yaml
      volumes:
        - name: users-key
          nfs:
            server: 192.168.20.5
            path: /volume1/k8s/users
            readOnly: true
        - name: applycation
          configMap:
            name: users-cfg
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: users-ingress
  namespace: app
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  rules:
    - host: users.mouse.center
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: users
                port:
                  number: 8080
