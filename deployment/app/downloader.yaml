apiVersion: apps/v1
kind: Deployment
metadata:
  name: downloader
  namespace: app
  labels:
    k8s-app: downloader
spec:
  selector:
    matchLabels:
      k8s-app: downloader
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: downloader
      namespace: app
      name: downloader
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: downloader
          image: registry.mouse.center:1443/p3terx/aria2-pro
          imagePullPolicy: Always
          ports:
            - containerPort: 6800
              name: rpc
              protocol: TCP
            - containerPort: 6888
              name: bt
              protocol: TCP
            - containerPort: 6888
              name: dht
              protocol: UDP
          livenessProbe:
            tcpSocket:
              port: 6800
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 6800
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 6
          env:
            - name: PUID
              value: "1024"
            - name: PGID
              value: "100"
            - name: UMASK_SET
              value: "022"
            - name: RPC_SECRET
              valueFrom:
                secretKeyRef:
                  name: downloader-secret
                  key: secret
            - name: RPC_PORT
              value: "6800"
            - name: LISTEN_PORT
              value: "6888"
            - name: DISK_CACHE
              value: 256M
            - name: IPV6_MODE
              value: "false"
            - name: UPDATE_TRACKERS
              value: "false"
            - name: TZ
              value: Asia/Shanghai
          volumeMounts:
            - mountPath: /video
              name: downloader-video
            - mountPath: /share
              name: downloads-share
            - mountPath: /config
              name: downloader-config
            - mountPath: /video-station
              name: downloader-video-station
        - name: downloader-web
          image: registry.mouse.center:1443/p3terx/ariang
          imagePullPolicy: Always
          ports:
            - containerPort: 6880
              protocol: TCP
              name: http
          livenessProbe:
            tcpSocket:
              port: 6880
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 6880
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 6
      volumes:
        - name: downloader-config
          nfs:
            server: nas
            path: /volume2/k8s/downloader/config
        - name: downloader-video
          nfs:
            server: nas
            path: /volume2/video
        - name: downloader-video-station
          nfs:
            path: /volume2/VideoStation
            server: nas
        - name: downloads-share
          nfs:
            path: /volume2/share
            server: nas
---
apiVersion: v1
kind: Service
metadata:
  name: downloader
  namespace: app
  labels:
    k8s-app: downloader
spec:
  type: NodePort
  ports:
    - port: 80
      name: web
      targetPort: 6880
    - port: 6888
      name: bt
      protocol: TCP
      targetPort: 6888
      nodePort: 30688
    - port: 6888
      name: dht
      protocol: UDP
      targetPort: 6888
      nodePort: 30688
    - port: 6800
      name: rpc
      targetPort: 6800
  selector:
    k8s-app: downloader
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: downloader-ingress
  namespace: app
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: downloader-web-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
spec:
  ingressClassName: "nginx"
  rules:
    - host: downloader.mouse.center
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: downloader
                port:
                  number: 80
          - path: /jsonrpc
            pathType: Prefix
            backend:
              service:
                name: downloader
                port:
                  number: 6800
