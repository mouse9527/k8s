# pvc start
kind: PersistentVolume
apiVersion: v1
metadata:
  name: downloader-pv
  namespace: tool
  labels:
    pv: downloader-pv
spec:
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  nfs:
    server: nas.lan
    path: /volume1/video/V
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: downloader-pvc
  namespace: tool
spec:
  selector:
    matchLabels:
      pv: downloader-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: downloader-config-pv
  namespace: tool
  labels:
    pv: downloader-config-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  nfs:
    server: nas.lan
    path: /volume1/k8s/downloader/config
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: tool
  name: downloader-config-pvc
spec:
  selector:
    matchLabels:
      pv: downloader-config-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
# pvc end
---
kind: Deployment
apiVersion: tools/v1
metadata:
  name: downloader
  namespace: tool
  labels:
    k8s-app: downloader
spec:
  selector:
    matchLabels:
      k8s-app: downloader
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: downloader
      namespace: tool
      name: downloader
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: downloader
          image: registry.mouse.center:1443/p3terx/aria2-pro
          ports:
            - containerPort: 6800
              name: rpc
              protocol: TCP
            - containerPort: 6888
              name: tcp
              protocol: TCP
            - containerPort: 6888
              name: udp
              protocol: UDP
          livenessProbe:
            tcpSocket:
              port: 6800
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 6800
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 6
          env:
            - name: PUID
              value: "65534"
            - name: PGID
              value: "65534"
            - name: UMASK_SET
              value: "022"
            - name: RPC_SECRET
              valueFrom:
                secretKeyRef:
                  name: downloader-secret
                  key: secret
            - name: RPC_PORT
              value: "6800"
            - name: LISTEN_PORT
              value: "6888"
            - name: DISK_CACHE
              value: 256M
            - name: IPV6_MODE
              value: "false"
            - name: UPDATE_TRACKERS
              value: "false"
            - name: TZ
              value: Asia/Shanghai
          volumeMounts:
            - mountPath: /downloads
              name: downloader-data
            - mountPath: /config
              name: downloader-config
        - name: downloader-web
          image: registry.mouse.center:1443/p3terx/ariang
          ports:
            - containerPort: 6880
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 6880
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 6880
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 6
      volumes:
        - name: downloader-data
          persistentVolumeClaim:
            claimName: downloader-pvc
        - name: downloader-config
          persistentVolumeClaim:
            claimName: downloader-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: downloader
  namespace: tool
  labels:
    k8s-app: downloader
spec:
  type: NodePort
  ports:
    - port: 80
      name: web
      targetPort: 6880
    - port: 6888
      name: tcp
      protocol: TCP
      targetPort: 6888
      nodePort: 30688
    - port: 6888
      name: udp
      protocol: UDP
      targetPort: 6888
      nodePort: 30688
    - port: 6800
      name: rpc
      targetPort: 6800
      nodePort: 30680
  selector:
    k8s-app: downloader
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: downloader-ingress
  namespace: tool
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: downloader-web-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
spec:
  rules:
    - host: downloader.mouse.center
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: downloader
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: downloader-rpc-ingress
  namespace: tool
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  rules:
    - host: downloader-rpc.mouse.center
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: downloader
                port:
                  number: 6800
