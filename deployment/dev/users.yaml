kind: Service
apiVersion: v1
metadata:
  namespace: dev
  name: users
spec:
  selector:
    app: users
  ports:
    - port: 80
      name: rest
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  namespace: dev
  labels:
    app: users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users
  template:
    metadata:
      namespace: dev
      name: users
      labels:
        app: users
    spec:
      initContainers:
        - name: glowroot
          image: registry.mouse.center:1443/glowroot:0.13.6
          command: [ "/bin/sh" ]
          args: [ "-c", "cp -R /glowroot /agent/glowroot" ]
          volumeMounts:
            - mountPath: /agent
              name: agent
        - name: skywalking
          image: registry.mouse.center:1443/apache/skywalking-java-agent:8.9.0-java17
          command: [ "/bin/sh" ]
          args: [ "-c", "cp -R /skywalking/agent /agent/skywalking" ]
          volumeMounts:
            - mountPath: /agent
              name: agent
      containers:
        - name: users
          image: registry.mouse.center:1443/users/users
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: web
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/agent/glowroot/glowroot.jar -Dglowroot.collector.address=glowroot-central:8181 -javaagent:/agent/skywalking/skywalking-agent.jar"
            - name: SW_AGENT_NAME
              value: "users"
            - name: SW_AGENT_NAMESPACE
              value: "dev"
            - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
              value: "skywalking-backend:11800"
          envFrom:
            - configMapRef:
                name: application-test-cfg
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 6
          volumeMounts:
            - mountPath: /app/cofnig
              name: users-key
            - mountPath: /agent
              name: agent
      volumes:
        - name: users-key
          nfs:
            server: nas
            path: /volume2/k8s/users
            readOnly: true
        - name: agent
          emptyDir:
            { }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: users-ingress
  namespace: dev
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: "nginx"
  rules:
    - host: users.mouse.center
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: users
                port:
                  name: rest
